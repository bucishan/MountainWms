@using M.Core.Dto
@using M.Utils.Json
@{
    Layout = "_LayoutH";
    @model RoleMenuAuthDto
}
<div id="app" v-cloak>
    <form class="form form-horizontal" onsubmit="return false">
        <div class="box-body">
            <table class="table table-bordered">
                <tr>
                    <td>
                        <div class="form-group">
                            <div class="col-sm-12">
                                <input v-on:click="checkAll" class="btn btn-primary radius" type="button" value="全选">
                                <input v-on:click="inverse" class="btn btn-primary radius" type="button" value="反选">
                            </div>
                        </div>
                    </td>
                </tr>
                <tr v-for="item in list">
                    <td>
                        <div class="form-group">
                            <label class="control-label col-sm-2">{{item.MenuName}}：</label>
                            <div class="col-sm-10">
                                <template v-for="item2 in item.Children">
                                    <label class="checkbox-inline">
                                        <input type="checkbox" v-model="checkedNames" :value="item2.MenuAuthId">
                                        {{item2.AuthName}}
                                    </label>
                                </template>
                            </div>
                        </div>
                    </td>
                </tr>
            </table>
            <div class="box-footer">
                <div class="pull-right box-tools">
                    <input v-on:click="addL" class="btn btn-primary radius" type="submit" v-model="submit">
                </div>
            </div>
        </div>
    </form>
</div>
@section styles{
    <style>
    </style>
}
@section scripts{
    <script>
        var app = new Vue({
            el: "#app",
            data: {
                submit: "添加",
                RoleId:"@Model.RoleId",
                checked: "",
                updateList:@Html.Raw(Model.Children.ToJsonLongString()),
                checkedNames: [],
                list: []
            },
            computed: {
                count: function () {
                    return this.strLength(this.Remark, false);
                }
            },
            watch: {
                updateList: function () {
                    var _self = this;
                    var obj = _self.updateList;
                    var arr = [];
                    if (obj.length > 0) {
                        for (var item in obj) {
                            arr.push(obj[item].MenuAuthId);
                        }
                    }
                    _self.checkedNames = arr;
                },
            },
            mounted: function () {
                var _self = this;
                _self.$nextTick(function () {
                    _self.loadL();
                    _self.updateList=@Html.Raw(Model.Children.ToJsonLongString());
                });
            },
            methods: {
                checkAll: function () {
                    var _self = this;
                    _self.list.forEach(function (item, index) {
                        item.Children.forEach(function (c, i) {
                            if (_self.checkedNames.indexOf(c.MenuAuthId.toString()) < 0) {
                                _self.checkedNames.push(c.MenuAuthId.toString())
                            }
                        });
                    });
                },
                inverse: function () {
                    var _self = this;
                    _self.checkedNames = [];
                },
                loadL: function () {
                    var _self = this;
                    yui.$axiosget('/Role/GetRoleMenuList/?id=' + _self.RoleId)
                        .then(function (response) {
                            _self.list = response.data;
                        })
                        .catch(function (error) {
                            layer.msg(error.message, { icon: 5 });
                        });

                },
                distinct: function (arr) {
                    let result = []
                    let obj = {}
                    for (let i of arr) {
                        if (!obj[i]) {
                            result.push(i)
                            obj[i] = 1
                        }
                    }
                    return result;
                },
                addL: function () {
                    var _self = this;
                    var index = layer.load(1, {
                        shade: [0.1, '#fff'] //0.1透明度的白色背景
                    });
                    var data = {
                        id: _self.RoleId,
                        menuAuthId: _self.distinct(_self.checkedNames)
                    };
                    yui.$axiospostform('/Role/UpdateAuth', data)
                        .then(function (response) {
                            if (response.data.Item1 === 101) {
                                layer.tips(response.data.Item2, '.layui-layer-setwin', {
                                    tips: [1, '#3595CC'],
                                    time: 3000
                                });
                                layer.close(index);
                                return false;
                            }
                            if (response.data.Item1) {
                                layer.msg(response.data.Item2, { icon: 1, time: 1000 });
                                setTimeout(function () {
                                    yui.layer_close3();
                                }, 500);
                            } else {
                                layer.msg(response.data.Item2 || errorMsg, { icon: 5 });
                            }
                            layer.close(index);
                        })
                        .catch(function (error) {
                            layer.close(index);
                        });
                }
            }
        });
    </script>
}